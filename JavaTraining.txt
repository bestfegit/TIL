편의점 문제

import java.util.Scanner;

public class MainClass {

	public static void main(String[] args) {


Scanner sc = new Scanner(System.in); // 입력구문 동적할당
				
		int price = 3210; //변수들 설정
		int myMoney = 10000;
		
		System.out.print("지불해야 할 금액 = ");
		price = sc.nextInt();
		
		System.out.print("본인의 돈 = ");
		myMoney = sc.nextInt();
		
		int changeMoney = myMoney - price; // 지불 후 남는 금액 변수설정
		
		//5000
		int m5000 = changeMoney / 5000; // 남는 금액에서 5000원 몇장?
		
		//1000
		int m1000 = (changeMoney % 5000) / 1000; 남은 금액 5000원 다 내고 남은 나머지를 계산
		
		//500
		int m500 = (changeMoney % 1000) / 500;
		
		int m100 = (changeMoney % 500) / 100;
		
		int m50 = (changeMoney % 100) / 50;
		
		int m10 = (changeMoney % 50) / 10;
		
		System.out.println("거스름 돈:" + changeMoney);
		System.out.println("5000원권:" + m5000);
		System.out.println("1000원권:" + m1000);
		System.out.println("500원권:" + m500);
		System.out.println("100원권:" + m50);
		System.out.println("50원권:" + m10);
    }
}

날짜문제 
import java.util.Calendar;

public class MainClass {

	public static void main(String[] args) {
		/*
			Calendar, Date
        */
		//Calendar cal = new GregorianCalendar();
		Calendar cal = Calendar.getInstance();
		
		//오늘 날짜
		int year = cal.get(Calendar.YEAR);  // get을 사용해서 가져옴
		int month = cal.get(Calendar.MONTH) + 1; // 0부터 시작해서 그럼
		int day = cal.get(Calendar.DATE);
		
		System.out.println(year + "년" + month + "월" + day + "일");
		
		// 날짜 설정
		cal.set(Calendar.YEAR, 2022); // 세팅
		cal.set(Calendar.MONTH, 2 -1) ;
		cal.set(Calendar.DATE, 11);
		
		year = cal.get(Calendar.YEAR);
		month = cal.get(Calendar.MONTH) + 1;
		day = cal.get(Calendar.DATE);
		
		System.out.println(year + "년" + month + "월" + day + "일");
		
		//오전오후
		int ampm = cal.get(Calendar.AM_PM);
		System.out.println(ampm);   // 오전 : 0 오후 : 1
		
		
		//요일
		int weekday = cal.get(Calendar.DAY_OF_WEEK); // 1(일)~7(토)요일
		System.out.println(weekday);
		
		//마지막날 31 30 28 29
		int lastday = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
		System.out.println(lastday);
		}

}